file test
b gakview::Image::GetFileList
run
pargv
p argv
p *argv
n
n
p fileDir
n
p fileDir
n
p x
p x.path()
p x.path().m_pathname
n
p x.path().m_pathname
n
p x.path().m_pathname
n
n
n
n
p m_fileList
n
p succes
n
p *argv
n
psucces
p succes
n
n
n
n
n
q
run
q
b gakview::Image::GetFileList
n
run
n
run
n
run
n
n
p fileDir
display filDir
display fileDir
n
n
n
q
run --gtest_filter=GetFileList.*
run
run
run --gtest_filter=*.*
run --gtest_filter=Application.*
exit
q
run test
run test
run
file test
b gakview::Image::GetFileList
b gakview::Image::SetFileList
n
run
next
clear
clear
n
n
n
u
n
n
u
k
rb gakview::
run
n
n
n
n
n
n
n
n
cl
clear
clear all
checkpoint
dq
q
quit
break gakview::Application::Init
display succes
n
run
display succes
n
n
quit
break gakview::Application::Init
n
run
display succes
n
n
s
c
c
ls
ls -la
run
n
exit
quit
file test
run --gtest_filter=Application.*
br gakview::Application
rb gakview::Application
run --gtest_filter=Application.*
n
display succes
n
exit
quit
file test
rb gakview::Application
run --gtest_filter=Application.*
n
n
n
s
display succes
n
n
display m_fileList
display m_fileList.size()
p argv
p argv[1]
n
p path(m_fileList.at(i))
p path(m_fileList.at(0))
p path(m_fileList.at(0))
info
info locals
n
n
p m_index
quit
run --gtest_filter=Image.*
rb gakview::Image::SetIndex
run --gtest_filter=Image.*
display argv[1]
n
display succes
n
info locals
display locals
n
n
n
quit
file test
run --gtest_filter=Image.*
rb gakview::Image::
n
run --gtest_filter=Image.*
n
n
s
c
n
n 10
n
p file_extension 
n
display argv[1]
c
n
c
c
c
c
c
c
c
d
db
help
help d
b test_image.cpp 23
b "test_image.cpp" 23
run
exit
quit
b test_image.cpp:21
run --gtest_filter=Image.*
n
s
n
n
display argv[1]
display fileDir
n
p path(argv[1]).parent_path()
quit
b test_image.cpp:30
run
s
n
display argv[1]
n
p m_fileList.size()
p m_fileList
quit
b test_image.cpp:30
run
s
n
kill;
kill
b test_image.cpp:29
run
s
n
n
p GetFilePath(argv)
n
p directory_iterator(GetFilePath(argv))
p directory_iterator(GetFilePath(argv))
n
p directory_iterator(GetFilePath(argv))
p x
display x.m_path.m_pathname
p x.path()
p x.path().extension().string()
display x.path().extension().string()
n
n
undisplay x.path().extension().string()
udisplay x.path().extension().string()
undisplay 2
display file_extension
n
display m_fileList
n
n
n
n
quit
